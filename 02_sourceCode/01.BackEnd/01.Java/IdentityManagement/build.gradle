/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kenji' at '17/04/15 9:23' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

war {
    baseName = 'IdentityManagement'
    version =  ''
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.springframework.boot:spring-boot-starter-web'
 	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-security'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile('org.springframework.boot:spring-boot-starter-test')

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compileOnly("org.projectlombok:lombok:1.16.16")
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.4'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.16.1'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.2.2.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    // for db
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.2.RELEASE'
	// https://mvnrepository.com/artifact/javax.persistence/persistence-api
	compile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	// https://mvnrepository.com/artifact/org.springframework/springloaded
	compile group: 'org.springframework', name: 'springloaded', version: '1.2.7.RELEASE'
// https://mvnrepository.com/artifact/net.kemitix/sqlite-dialect
compile group: 'net.kemitix', name: 'sqlite-dialect', version: '0.1.0'


}
